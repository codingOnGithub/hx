<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.platform.model.system.AliasScript">
	<resultMap id="AliasScript" type="com.hotent.platform.model.system.AliasScript">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="aliasName" column="ALIAS_NAME" jdbcType="VARCHAR"/>
		<result property="aliasDesc" column="ALIAS_DESC" jdbcType="VARCHAR"/>
		<result property="className" column="CLASS_NAME" jdbcType="VARCHAR"/>
		<result property="classInsName" column="CLASS_INS_NAME" jdbcType="VARCHAR"/>
		<result property="methodName" column="METHOD_NAME" jdbcType="VARCHAR"/>
		<result property="methodDesc" column="METHOD_DESC" jdbcType="VARCHAR"/>
		<result property="returnType" column="RETURN_TYPE" jdbcType="VARCHAR"/>
		<result property="argument" column="ARGUMENT" jdbcType="CLOB"/>
		<result property="enable" column="ENABLE" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		ID,ALIAS_NAME,ALIAS_DESC,CLASS_NAME,CLASS_INS_NAME,METHOD_NAME,METHOD_DESC,RETURN_TYPE,ARGUMENT,ENABLE
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND ID  =#{id} </if>
			<if test="@Ognl@isNotEmpty(aliasName)"> AND ALIAS_NAME  LIKE #{aliasName}  </if>
			<if test="@Ognl@isNotEmpty(aliasDesc)"> AND ALIAS_DESC  LIKE #{aliasDesc}  </if>
			<if test="@Ognl@isNotEmpty(className)"> AND CLASS_NAME  LIKE #{className}  </if>
			<if test="@Ognl@isNotEmpty(classInsName)"> AND CLASS_INS_NAME  LIKE #{classInsName}  </if>
			<if test="@Ognl@isNotEmpty(methodName)"> AND METHOD_NAME  LIKE #{methodName}  </if>
			<if test="@Ognl@isNotEmpty(methodDesc)"> AND METHOD_DESC  LIKE #{methodDesc}  </if>
			<if test="@Ognl@isNotEmpty(returnType)"> AND RETURN_TYPE  LIKE #{returnType}  </if>
			<if test="@Ognl@isNotEmpty(argument)"> AND ARGUMENT  LIKE #{argument}  </if>
			<if test="@Ognl@isNotEmpty(enable)"> AND ENABLE  =#{enable} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.platform.model.system.AliasScript">
		INSERT INTO SYS_ALIAS_SCRIPT
		(ID,ALIAS_NAME,ALIAS_DESC,CLASS_NAME,CLASS_INS_NAME,METHOD_NAME,METHOD_DESC,RETURN_TYPE,ARGUMENT,ENABLE)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{aliasName,jdbcType=VARCHAR}, #{aliasDesc,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, #{classInsName,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, #{methodDesc,jdbcType=VARCHAR}, #{returnType,jdbcType=VARCHAR}, #{argument,jdbcType=CLOB}, #{enable,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM SYS_ALIAS_SCRIPT 
		WHERE
		ID=#{id}
	</delete>
	
	<update id="update" parameterType="com.hotent.platform.model.system.AliasScript">
		UPDATE SYS_ALIAS_SCRIPT SET
		ALIAS_NAME=#{aliasName,jdbcType=VARCHAR},
		ALIAS_DESC=#{aliasDesc,jdbcType=VARCHAR},
		CLASS_NAME=#{className,jdbcType=VARCHAR},
		CLASS_INS_NAME=#{classInsName,jdbcType=VARCHAR},
		METHOD_NAME=#{methodName,jdbcType=VARCHAR},
		METHOD_DESC=#{methodDesc,jdbcType=VARCHAR},
		RETURN_TYPE=#{returnType,jdbcType=VARCHAR},
		ARGUMENT=#{argument,jdbcType=CLOB},
		ENABLE=#{enable,jdbcType=NUMERIC}
		WHERE
		ID=#{id}
	</update>
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="AliasScript">
		SELECT <include refid="columns"/>
		FROM SYS_ALIAS_SCRIPT
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="AliasScript">
		SELECT <include refid="columns"/>
		FROM SYS_ALIAS_SCRIPT   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	
	<select id="getByName" parameterType="java.util.Map" resultMap="AliasScript">
		SELECT <include refid="columns"/>
		FROM SYS_ALIAS_SCRIPT
		WHERE 1=1 
		<if test="@Ognl@isNotEmpty(aliasName)"> AND ALIAS_NAME = #{aliasName} </if>
	</select>
</mapper>
