<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-autowire="byName" default-lazy-init="false">

	<bean id="iCache" class="com.hotent.base.core.cache.impl.MemcachedCache"
		autowire="default">
		<property name="memcachedClient" ref="memcachedClient"></property>
	</bean>

	<bean name="memcachedClient"
		class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean"
		destroy-method="shutdown">
		<property name="servers" value="localhost:12345"></property>
	</bean>


	<!-- 脚本引擎 -->
	<bean id="scriptEngine" class="com.hotent.base.core.engine.script.GroovyScriptEngine">
		<property name="bindingInterface">
			<list>
				<value>com.hotent.base.core.engine.script.IScript</value>
			</list>
		</property>
	</bean>
	<!-- 暴露给脚本引擎的代码，凡实现了IScript接口的类都被注入到groovy引擎使用 -->
	<bean id="scriptImpl" class="com.hotent.base.core.engine.script.ScriptImplTest"></bean>


	<!-- 文件模版引擎配置 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPath" value="classpath:template/" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<bean id="templateLoader" class="freemarker.cache.StringTemplateLoader"></bean>
	<!-- freemaker引擎 -->
	<bean id="freemarkEngine" class="com.hotent.base.core.engine.freemark.FreemarkEngine">
		<property name="configuration" ref="freemarkerConfiguration" />
	</bean>
	
	<bean id="corePlaceHolder"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="searchSystemEnvironment" value="true" />
		<property name="locations">
			<list>
				<value>classpath:conf/*.properties</value>
			</list>
		</property>
	</bean>


	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${db.driver}" />
		<property name="driverUrl" value="${db.url}" />
		<property name="user" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="alias" value="${db.alias}" />
		<property name="simultaneousBuildThrottle" value="${db.simultaneousBuildThrottle}" />
		<property name="maximumActiveTime" value="${db.maximumActiveTime}" />
		<property name="houseKeepingTestSql" value="${db.houseKeepingTestSql}" />
		<property name="maximumConnectionCount" value="${db.maximumConnectionCount}" />
		<property name="minimumConnectionCount" value="${db.minimumConnectionCount}" />
		<property name="delegateProperties" value="characterEncoding=${db.characterEncoding}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- QUARTZ 2.0配置的问题 -->
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="true" destroy-method="destroy">
		<property name="autoStartup" value="true" />
		<property name="waitForJobsToCompleteOnShutdown" value="true" />
		<property name="dataSource" ref="dataSource" />
		<property name="overwriteExistingJobs" value="true" />
		<property name="startupDelay" value="60"></property>
		<property name="jobFactory">
			<bean class="org.quartz.simpl.SimpleJobFactory"></bean>
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">ClusteredScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>

				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
				<prop key="org.quartz.threadPool.threadPriority">5</prop>

				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">${quartz.jdbcjobstore}</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
				<prop key="org.quartz.jobStore.useProperties">false</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>

				<prop key="org.quartz.jobStore.isClustered">true</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>

				<prop key="org.quartz.scheduler.classLoadHelper.class">org.quartz.simpl.CascadingClassLoadHelper</prop>
				<prop key="org.quartz.jobStore.lockHandler.class">org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
				</prop>
				<prop key="org.quartz.jobStore.lockHandler.updateLockRowSQL">UPDATE QRTZ_LOCKS SET LOCK_NAME = LOCK_NAME WHERE
					LOCK_NAME = ?</prop>
			</props>
		</property>
	</bean>

	<!-- 定时器服务类 -->
	<bean id="schedulerService" class="com.hotent.base.core.scheduler.SchedulerService"></bean>


</beans>